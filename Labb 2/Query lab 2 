
1. 
--Display posts and tags
--Text
SELECT Post.Title,
       STRING_AGG(PostTag.Tag, ', ') AS Tags
FROM Post
LEFT JOIN PostTag ON Post.PostID = PostTag.PostID
GROUP BY Post.Title;


2.
WITH RankedPosts AS (
  SELECT 
    p.PostID,                      -- Post ID
    p.Title,                        -- Post Title
    COUNT(l.PostID) AS likes_count, -- Number of Likes
    RANK() OVER (ORDER BY COUNT(l.PostID) DESC) AS rank -- Ranking posts by likes count
  FROM 
    Post p
  JOIN 
    PostTag pt ON p.PostID = pt.PostID  -- Join to filter posts by tag
  LEFT JOIN 
    Likes l ON p.PostID = l.PostID     -- Left join to count likes
  WHERE 
    pt.Tag = '#leadership'  -- Filter for the '#leadership' tag
  GROUP BY 
    p.PostID, p.Title  -- Group by PostID and Title
)
SELECT 
  PostID,
  Title,
  rank
FROM 
  RankedPosts
WHERE 
  rank <= 5;  -- Return only the top 5 posts




4.
SELECT 
  u.name,  -- User's name
  CASE 
    WHEN COUNT(f.FriendID) > 0 THEN true  -- If the user has at least one friend
    ELSE false  -- If the user has no friends
  END AS has_friend,  
  s.date AS registration_date  -- Registration date from the Subscription table
FROM 
  Users u
LEFT JOIN 
  Friend f ON u.UserID = f.UserID OR u.UserID = f.FriendID  -- Check for friendships
JOIN 
  Subscription s ON u.UserID = s.UserID  -- Join with Subscription to get registration date
WHERE 
  EXTRACT(MONTH FROM s.date) = 1  -- Filter for January registrations
GROUP BY 
  u.UserID, u.name, s.date  -- Grouping by UserID, name, and registration date
ORDER BY 
  u.name;  -- Sorting by name alphabetically
